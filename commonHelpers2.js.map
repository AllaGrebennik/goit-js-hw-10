{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["'use strict';\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet isSuccess = true;\n\nconst form = document.querySelector(\".form\");\nconst inputFulfilled = document.querySelector('[value=\"fulfilled\"]');\n\nform.addEventListener('submit', e => {\n    e.preventDefault();\n\n    const delay = form.elements.delay.value;\n    if (delay <= 0 ) {\n        iziToast.warning({ position: 'topRight', message: \"Invalid value delay\" });\n        return;\n    };\n   \n    isSuccess = inputFulfilled.checked ? true : false;\n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (isSuccess) {\n                resolve(`Fulfilled promise in ${delay}ms`);\n            }\n            else {\n                reject(`❌ Rejected promise in ${delay}ms`);\n            }\n        }, delay);\n    });\n        \n    promise\n        .then(value => iziToast.success({ position: 'topRight', title: \"OK\", message: value }))\n        .catch(error => iziToast.error({ position: 'topRight', title: \"Error\", message: error }))\n        .finally(() => iziToast.info({ position: 'topRight', title: \"Informing\", message: \"Promise settled\" })); \n});"],"names":["isSuccess","form","inputFulfilled","e","delay","iziToast","resolve","reject","value","error"],"mappings":"+FAKA,IAAIA,EAAY,GAEhB,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAiB,SAAS,cAAc,qBAAqB,EAEnED,EAAK,iBAAiB,SAAUE,GAAK,CACjCA,EAAE,eAAc,EAEhB,MAAMC,EAAQH,EAAK,SAAS,MAAM,MAClC,GAAIG,GAAS,EAAI,CACbC,EAAS,QAAQ,CAAE,SAAU,WAAY,QAAS,qBAAqB,CAAE,EACzE,MAER,CACIL,EAAY,EAAAE,EAAe,QACX,IAAI,QAAQ,CAACI,EAASC,IAAW,CAC7C,WAAW,IAAM,CACTP,EACAM,EAAQ,wBAAwBF,KAAS,EAGzCG,EAAO,yBAAyBH,KAAS,CAEhD,EAAEA,CAAK,CAChB,CAAK,EAGI,KAAKI,GAASH,EAAS,QAAQ,CAAE,SAAU,WAAY,MAAO,KAAM,QAASG,CAAO,CAAA,CAAC,EACrF,MAAMC,GAASJ,EAAS,MAAM,CAAE,SAAU,WAAY,MAAO,QAAS,QAASI,CAAO,CAAA,CAAC,EACvF,QAAQ,IAAMJ,EAAS,KAAK,CAAE,SAAU,WAAY,MAAO,YAAa,QAAS,iBAAiB,CAAE,CAAC,CAC9G,CAAC"}